// 지뢰판

#include <stdio.h>

void makeFiled(int x,int y); // 두 정수를 입력 받아 지뢰판과 힌트판 만들어줄 함수
void main (void) {
    
    int m=0,n=0; // 게임판의 크기 입력 받을 변수
    int i=1;

    while(1){
        printf("Minsweeper Field #%d: ",i);
        scanf("%d %d",&m,&n);
        if(m==0&&n==0){ 
            printf("Bye~~~!");
            break;
        }
        else makeFiled(m,n); // m: 가로, n: 세로
        i++; 
    }
}

void makeFiled(int x,int y){

    int mField[x][y]; // 지뢰판
    int hField[x][y]; // 힌트판

    int i,j,k; // 제어변수

    // 힌트판
    for(i=0;i<x;i++){ 
        for(j=0;j<y;j++){
            if(i==0&&j==0) hField[i][j] = 9 ;
            else if(i==1&&j==2) hField[i][j] = 9 ;
            else if(i==2&&j==1) hField[i][j] = 9 ;
            else if(i==3&&j==1) hField[i][j] = 9 ;
            else if(i==2&&j==5) hField[i][j] = 9 ; // 지뢰일 경우
            else hField[i][j] = 10; // 아닐경우
        }
    } // *이렇게 먼저 선언 안해주고 지뢰판 하고 같이 for문 안에 넣으면 garbage 값이 나옴

    for(i=0;i<x;i++){
        // 지뢰판
        for(j=0;j<y;j++){
            if(j==0&&i==0) mField[i][j] = 9 ;
            else if(j==1&&i==2) mField[i][j] = 9;
            else if(j==1&&i==3) mField[i][j] = 9;
            else if(j==2&&i==1) mField[i][j] = 9;
            else if(j==5&&i==2) mField[i][j] = 9; // 지뢰일 경우
            else mField[i][j] = 1; // 아닐경우
        }
        // 주변 지뢰가 최대 8개 이므로 9를 지뢰로 생각함
        for(j=0;j<y;j++){
            // 1.모서리 부분 
            if(i==0&&j==0&&hField[i][j]!=9) {
                int count = 0;
                for(k=0;k<3;k++){
                    if(k==0) {
                        if(hField[0][1]==9) count+=1;
                    }
                    else if(k==1) {
                        if(hField[1][0]==9) count+=1;
                    }
                    else if(k==2){
                        if(hField[1][1]==9) count+=1;
                    }
                }
                // 지뢰개수 입력
                hField[i][j] = count;
            }
            else if(i==(x-1)&&j==0&&hField[i][j]!=9) {
                int count = 0;                
                if(hField[x-2][0]==9) count+=1;                  
                if(hField[x-1][1]==9) count+=1;
                if(hField[x-2][1]==9) count+=1;
                // 지뢰개수 입력
                hField[i][j] = count;
            }
            else if(i==0&&j==(y-1)&&hField[i][j]!=9) {
                int count = 0;
                if(hField[0][y-2]==9) count+=1;
                if(hField[1][y-2]==9) count+=1;
                if(hField[1][y-1]==9) count+=1;
                // 지뢰개수 입력
                hField[i][j] = count;
            }
            else if(i==x-1&&j==(y-1)&&hField[i][j]!=9) {
                int count = 0;
                if(hField[x-2][y-1]==9) count+=1;
                if(hField[x-1][y-2]==9) count+=1;
                if(hField[x-2][y-2]==9) count+=1;
               
                // 지뢰개수 입력
                hField[i][j] = count;
            } 
        
            // 2.테두리 
            // 2-1 i가 0인 경우 
            else if(i==0&&j!=0&&j!=(y-1)&&hField[i][j]!=9){
                int count = 0;
              
                if(hField[0][j-1] == 9) count+=1;
                if(hField[0][j+1] == 9) count+=1;
                if(hField[1][j] == 9) count+=1;
                if(hField[1][j-1] == 9) count+=1;
                if(hField[1][j+1] == 9) count+=1;
                // 지뢰개수 입력
                hField[i][j] = count;
            }
            // 2-2 i가 x-1인 경우
            else if(i==(x-1)&&j!=0&&j!=(y-1)&&hField[i][j]!=9){
                int count = 0;
                if(hField[x-1][j-1] == 9) count+=1;
                if(hField[x-1][j+1] == 9) count+=1;
                if(hField[x-2][j] == 9) count+=1;
                if(hField[x-2][j-1] == 9) count+=1;
                if(hField[x-2][j+1] == 9) count+=1;
                // 지뢰개수 입력
                hField[i][j] = count;
            }
            // 2-3 j가 0 인 경우
            else if(i!=0&&i!=(x-1)&&j==0&&hField[i][j]!=9){
                int count = 0;
                if(hField[i-1][0] == 9) count+=1;
                if(hField[i+1][0] == 9) count+=1;
                if(hField[i][1] == 9) count+=1;
                if(hField[i-1][1] == 9) count+=1;
                if(hField[i+1][1] == 9) count+=1;
                // 지뢰개수 입력
                hField[i][j] = count;
            }
            // 2-4 j가 y-1인 경우
            else if(i!=0&&i!=(x-1)&&j==(y-1)&&hField[i][j]!=9){
                int count = 0;
                if(hField[j-1][y-1] == 9) count+=1;
                if(hField[j+1][y-1] == 9) count+=1;
                if(hField[j][y-2] == 9) count+=1;
                if(hField[j-1][y-2] == 9) count+=1;
                if(hField[j+1][y-2] == 9) count+=1;
                // 지뢰개수 입력
                hField[i][j] = count;
            }
            // 2-5 그 외 
            else if(hField[i][j]==10&&hField[i][j]!=9){
                int count = 0;
                if(hField[i-1][j-1] == 9) count+=1;
                if(hField[i-1][j] == 9) count+=1;
                if(hField[i-1][j+1] == 9) count+=1;
                if(hField[i][j-1] == 9) count+=1;
                if(hField[i][j+1] == 9) count+=1;
                if(hField[i+1][j-1] == 9) count+=1;
                if(hField[i+1][j] == 9) count+=1;
                if(hField[i+1][j+1] == 9) count+=1;
                // 지뢰개수 입력
                hField[i][j] = count;
            }
        }
    }

    // 판 출력 
    for (i=0;i<x;i++){ 
        // 지뢰판
        for (j=0;j<y;j++){
            if(mField[i][j]==9) printf("* ");
            else printf("- ");
        }
        printf("            "); // 공백
        // 힌트 판 
        for (j=0;j<y;j++){
            if(hField[i][j]==9) printf("* ");
            else printf("%d ",hField[i][j]);
        }
        printf("\n");
    }
}

